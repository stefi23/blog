{"version":3,"file":"component---src-templates-blog-post-js-1ca9ab602f1432628226.js","mappings":"8NAWA,EARgB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,KAAqB,IAAfC,GAAAA,OAAe,MAAV,IAAU,EACtC,OACE,gBAAC,EAAAC,KAAD,CAAMD,GAAIA,EAAIE,UAAU,kBACrBH,ICyJP,EAxJiB,SAAAI,GAAU,IAAD,QAChBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,IAAKD,EACH,OACE,gBAAC,IAAD,KACE,uBAAKF,UAAU,qBACb,uBAAKA,UAAU,oBACb,2BACE,sBAAIA,UAAU,2BAAd,qCAUZ,IAAQI,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SAENC,EAAmBJ,EAAnBI,eAEAC,EAAmDD,EAAnDC,WAAYC,EAAuCF,EAAvCE,YAAaC,EAA0BH,EAA1BG,KAAMC,EAAoBJ,EAApBI,QAE/BC,EAFmDL,EAAXM,OAExCD,KAGNE,EAMEL,EANFK,MACAC,EAKEN,EALFM,KACAC,EAIEP,EAJFO,KACAC,EAGER,EAHFQ,WACAC,EAEET,EAFFS,cACAC,EACEV,EADFU,YAGIC,EAAWH,EACXI,EAAcX,EAEpB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEI,MAAOA,EACPK,YAAaA,GAAeR,EAC5BW,MAAOJ,MAAAA,GAAF,UAAEA,EAAeK,uBAAjB,iBAAE,EAAgCC,aAAlC,aAAE,EAAuCC,IAC9CC,UAAWd,IAEb,2BAASX,UAAU,gBACjB,uBAAKA,UAAU,OACb,8BACE,sBAAIA,UAAU,2BAA2Ba,GACzC,wBAAMb,UAAU,0BACVc,EADN,yBAEQP,EAFR,YAE+B,IAF/B,IAGI,IACF,gBAAC,EAAAR,KAAD,CACEC,UAAU,8BACVF,GAAE,aAAeqB,EAASO,eAF5B,aAIaP,IAGf,yBACGJ,EAAKY,KAAI,SAAAC,GAAG,OACX,gBAAC,EAAA7B,KAAD,CACED,GAAE,SAAW8B,EAAIF,cAAf,IACF1B,UAAU,mCACV6B,IAAKD,GAEJA,QAMT,wBAAME,wBAAyB,CAAEC,OAAQX,KACzC,8BACE,uBAAKpB,UAAU,YACb,uBAAKA,UAAU,cACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,cACb,sBAAIA,UAAU,qBAAd,kBACA,uBAAKgC,MAAM,wBAGf,uBAAKhC,UAAU,WACb,uBAAKA,UAAU,wEACb,sBAAIA,UAAU,qBAAd,mBAEF,uBAAKA,UAAU,kEACZK,GACC,gBAAC,EAAD,CACEP,GAAIO,MAAAA,GAAF,UAAEA,EAAUO,cAAZ,aAAE,EAAkBD,KACtBd,KAAI,OAAQQ,MAAAA,OAAR,EAAQA,EAAUG,YAAYK,OAClCoB,UAAU,UAIhB,uBAAKjC,UAAU,gEACZI,GACC,gBAAC,EAAD,CACEN,GAAIM,MAAAA,GAAF,UAAEA,EAAMQ,cAAR,aAAE,EAAcD,KAClBd,MAASO,MAAAA,OAAL,EAAKA,EAAMI,YAAYK,OAAvB,KACJoB,UAAU","sources":["webpack://gatsby-starter-default/./src/components/navLink.js","webpack://gatsby-starter-default/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst NavLink = ({ text, to = \"#\" }) => {\n  return (\n    <Link to={to} className=\"navigationLink\">\n      {text}\n    </Link>\n  )\n}\n\nexport default NavLink\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport NavLink from \"../components/navLink\"\n// import \"../components/layout.css\"\n\nconst BlogPost = props => {\n  const { data, pageContext } = props\n  if (!data) {\n    return (\n      <Layout>\n        <div className=\"post-innerContent\">\n          <div className=\"article-card row\">\n            <div>\n              <h1 className=\"post-innerContent-title\">\n                Oh, no! Something went wrong!\n              </h1>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n\n  const { next, previous } = pageContext\n\n  const { markdownRemark } = data\n\n  const { timeToRead, frontmatter, html, excerpt, fields } = markdownRemark\n\n  const { slug } = fields\n\n  const {\n    title,\n    date,\n    tags,\n    categories,\n    featuredImage,\n    description,\n  } = frontmatter\n\n  const category = categories\n  const postContent = html\n\n  return (\n    <Layout>\n      <SEO\n        title={title}\n        description={description || excerpt}\n        image={featuredImage?.childImageSharp?.sizes?.src}\n        canonical={slug}\n      />\n      <article className=\"article-card\">\n        <div className=\"col\">\n          <header>\n            <h1 className=\"post-innerContent-title\">{title}</h1>\n            <span className=\"post-innerContent-info\">\n              {`${date} •\n                  ${timeToRead} min read`}{\" \"}\n              •{\" \"}\n              <Link\n                className=\"post-innerContent-info-link\"\n                to={`/category/${category.toLowerCase()}`}\n              >\n                category: {category}\n              </Link>\n            </span>\n            <p>\n              {tags.map(tag => (\n                <Link\n                  to={`/tags/${tag.toLowerCase()}/`}\n                  className=\"post-innerContent-info-highlight\"\n                  key={tag}\n                >\n                  {tag}\n                </Link>\n              ))}\n            </p>\n          </header>\n\n          <main dangerouslySetInnerHTML={{ __html: postContent }} />\n          <footer>\n            <div className=\"row mt-2\">\n              <div className=\"col-md-12 \">\n                <div className=\"row p-3\">\n                  <div className=\"col-12 p-0\">\n                    <h3 className=\"post-footer-title\">Share article:</h3>\n                    <div class=\"s9-widget-wrapper\"></div>\n                  </div>\n                </div>\n                <div className=\"row p-3\">\n                  <div className=\"col-12 p-0 pr-2 mb-2 d-flex align-items-center justify-content-start\">\n                    <h3 className=\"post-footer-title\">More articles:</h3>\n                  </div>\n                  <div className=\"col-6 p-0 pr-2 d-flex align-items-center justify-content-start\">\n                    {previous && (\n                      <NavLink\n                        to={previous?.fields?.slug}\n                        text={`←  ${previous?.frontmatter.title}`}\n                        direction=\"left\"\n                      />\n                    )}\n                  </div>\n                  <div className=\"col-6 p-0 pl-2 d-flex align-items-center justify-content-end\">\n                    {next && (\n                      <NavLink\n                        to={next?.fields?.slug}\n                        text={`${next?.frontmatter.title} →`}\n                        direction=\"right\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </footer>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n      }\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        tags\n        categories\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          childImageSharp {\n            sizes(maxWidth: 600) {\n              src\n            }\n          }\n        }\n      }\n      timeToRead\n    }\n  }\n`\n\nexport default BlogPost\n"],"names":["text","to","Link","className","props","data","pageContext","next","previous","markdownRemark","timeToRead","frontmatter","html","excerpt","slug","fields","title","date","tags","categories","featuredImage","description","category","postContent","image","childImageSharp","sizes","src","canonical","toLowerCase","map","tag","key","dangerouslySetInnerHTML","__html","class","direction"],"sourceRoot":""}