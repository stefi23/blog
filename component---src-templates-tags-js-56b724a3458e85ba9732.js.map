{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","title","className","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"2FAAA,8GA0EeA,UAjEF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKK,MAAOD,IAEZ,yBAAKE,UAAU,qBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,QAAQF,GACtB,yBAAKE,UAAU,OACb,4BACGJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAJ,EAAUG,EAAKG,YAAfN,MACR,OACE,wBAAIO,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOJ,SAU3B,kBAAC,OAAD,CAAMQ,GAAG,SAAT,6BAkCP,IAAMC,EAAS","file":"component---src-templates-tags-js-56b724a3458e85ba9732.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <div>\n      <Layout>\n        <SEO title={tagHeader} />\n\n        <div className=\"tags-innerContent\">\n          <div className=\"article-card row\">\n            <div className=\"col\">\n              <h1 className=\"mb-3\">{tagHeader}</h1>\n              <div className=\"p-3\">\n                <ul>\n                  {edges.map(({ node }) => {\n                    const { slug } = node.fields\n                    const { title } = node.frontmatter\n                    return (\n                      <li key={slug}>\n                        <Link to={slug}>{title}</Link>\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div>\n              {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n              <Link to=\"/tags\">Go back to all tags</Link>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </div>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}