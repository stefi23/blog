{"version":3,"sources":["webpack:///./src/components/navigation.js","webpack:///./src/pages/index.js"],"names":["NavBtn","label","to","isDisabled","className","prefix","currentPage","totalPages","style","borderRadius","undefined","query","IndexPage","data","pageContext","title","allMarkdownRemark","edges","map","node","console","log","key","id","fields","slug","frontmatter","date","timeToRead","categories","toLowerCase","tags","tag","excerpt","BlogCurrentPage","BlogNumPages"],"mappings":"qMAGMA,G,UAAS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAA0C,IAAnCC,UAAmC,MAA9B,IAA8B,MAAzBC,WACjC,YAD0D,SAOtD,4BAIF,kBAAC,OAAD,CAAMD,GAAIA,EAAIE,UAAU,OACrBH,KAKQ,cAAqD,IAAD,IAAjDI,cAAiD,MAAxC,SAAwC,EAA9BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAChD,OAEE,yBACEH,UAAU,4BACVI,MAAO,CAAEC,aAAc,QAEvB,yBAAKL,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4DACb,kBAAC,EAAD,CACEF,GAAmB,GAAfI,EAAA,IAA4BD,EAA5B,KAAsCC,EAAc,GACxDL,MAAOK,EAAc,EACrBH,WAA2B,GAAfG,GAAmCI,MAAfJ,KAGpC,yBAAKF,UAAU,0DACb,kBAAC,EAAD,CACED,WAAYG,GAAeC,EAC3BL,GAAOG,EAAL,KAAeC,EAAc,GAC/BL,MAAOK,EAAc,SCctBK,G,UAAK,cAgCHC,UA9EG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACzB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SAEVF,EAAKG,kBAAkBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAGrC,OADEC,QAAQC,IAAIF,GAGZ,yBAAKf,UAAU,qBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,MAAMkB,IAAKH,EAAKI,IAC7B,kBAAC,OAAD,CAAMrB,GAAIiB,EAAKK,OAAOC,MAEpB,wBAAIrB,UAAU,2BAA2Be,EAAKO,YAAYX,QAE1D,0BAAMX,UAAU,0BACXe,EAAKO,YAAYC,KADtB,MACgCR,EAAKS,WADrC,kBAC8D,kBAAC,OAAD,CAAMxB,UAAU,8BAA8BF,GAAE,YAAeiB,EAAKO,YAAYG,WAAYC,eAA5F,aAAwHX,EAAKO,YAAYG,aAEvM,2BACCV,EAAKO,YAAYK,KAAKb,KAAI,SAAAc,GAAG,OAC5B,kBAAC,OAAD,CAAM9B,GAAE,SAAY8B,EAAKF,cAAjB,IAAmC1B,UAAU,mCAAmCkB,IAAKU,GAAMA,OAIvG,2BAAIb,EAAKc,SACT,yBAAK7B,UAAU,OACZ,kBAAC,OAAD,CAAMF,GAAIiB,EAAKK,OAAOC,MACnB,4BAAQrB,UAAU,qCAAlB,4BASd,kBAAC,EAAD,CACEE,YAAaQ,EAAYoB,gBACzB3B,WAAYO,EAAYqB","file":"component---src-pages-index-js-a888bd6c85462e9b32ff.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst NavBtn = ({ label, to = \"#\", isDisabled = false }) => {\n  if (isDisabled) {\n    //To change what is returned\n    return (\n      // <button disabled className=\"\">\n      //   {label}\n      // </button>\n      <p></p>\n    )\n  }\n  return (\n    <Link to={to} className=\"p-1\">\n      {label}\n    </Link>\n  )\n}\n\nexport default ({ prefix = \"/page/\", currentPage, totalPages }) => {\n  return (\n    //To change what it looks like\n    <div\n      className=\"row mt-2 nav-innerContent\"\n      style={{ borderRadius: \"4px\" }}\n    >\n      <div className=\"col-md-12 navigation-card\">\n        <div className=\"row\">\n          <div className=\"col-6 p-2 d-flex justify-content-start pl-4 hover-bright\">\n            <NavBtn\n              to={currentPage == 2 ? `/` : `${prefix}/${currentPage - 1}`}\n              label={currentPage - 1}\n              isDisabled={currentPage == 1 || currentPage == undefined}\n            />\n          </div>\n          <div className=\"col-6 p-2 d-flex justify-content-end pr-4 hover-bright\">\n            <NavBtn\n              isDisabled={currentPage == totalPages}\n              to={`${prefix}/${currentPage + 1}`}\n              label={currentPage + 1}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Navigation from \"../components/navigation\"\nimport { Helmet } from \"react-helmet\"\n\nconst IndexPage = ({ data, pageContext }) => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n\n      {data.allMarkdownRemark.edges.map(({ node }) => {\n\n        console.log(node)\n      return (\n       \n        <div className='post-innerContent'>\n          <div className=\"article-card row\">\n            <div className=\"col\" key={node.id}>\n              <Link to={node.fields.slug}>\n                {/* <img src={node.frontmatter.featuredImage.publicURL} alt='image'/> */}\n                <h1 className='post-innerContent-title'>{node.frontmatter.title}</h1>\n              </Link>\n                <span className=\"post-innerContent-info\">\n                 {`${node.frontmatter.date} • ${node.timeToRead} min read`} • <Link className=\"post-innerContent-info-link\" to={`category/${(node.frontmatter.categories).toLowerCase()}`}>category: {node.frontmatter.categories}</Link>  \n                </span>\n                <p>\n                {node.frontmatter.tags.map(tag => \n                  <Link to={`/tags/${(tag).toLowerCase()}/`} className='post-innerContent-info-highlight' key={tag}>{tag}</Link>\n                )\n                }\n                </p>\n              <p>{node.excerpt}</p>\n              <div className=\"col\">\n                 <Link to={node.fields.slug}>\n                    <button className=\"primaryButton primaryButton-right\">\n                      Continue Reading\n                    </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      )})}\n      <Navigation\n        currentPage={pageContext.BlogCurrentPage}\n        totalPages={pageContext.BlogNumPages}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($BlogSkip: Int, $BlogLimit: Int) {\n    allMarkdownRemark(\n      filter: {}\n      sort: { order: DESC, fields: frontmatter___date }\n      skip: $BlogSkip\n      limit: $BlogLimit\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            categories\n            featuredImage {\n            publicURL\n          }\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 350)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}