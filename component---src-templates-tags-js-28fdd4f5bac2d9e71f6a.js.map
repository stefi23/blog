{"version":3,"file":"component---src-templates-tags-js-28fdd4f5bac2d9e71f6a.js","mappings":"wLA0EA,UAjEa,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,2BACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKK,MAAOD,IAEZ,uBAAKE,UAAU,qBACb,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,OACb,sBAAIA,UAAU,gCAAgCF,GAC9C,uBAAKE,UAAU,OACb,0BACGJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACLC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YACRC,EAAQF,EAARE,KACAN,EAASK,EAATL,MACP,OACE,sBAAIC,UAAU,yBAAyBM,IAAKD,GAC1C,gBAAC,EAAAE,KAAD,CAAMP,UAAU,8BAA8BQ,GAAIH,GAAON,SAMjE,gBAAC,EAAAQ,KAAD,CAAMC,GAAG,SACP,0BAAQR,UAAU,gBAAgBS,KAAK,IAAvC","sources":["webpack://gatsby-starter-default/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <div>\n      <Layout>\n        <SEO title={tagHeader} />\n\n        <div className=\"tags-innerContent\">\n          <div className=\"article-card row\">\n            <div className=\"col\">\n              <h1 className=\"mb-3 tags-innerContent-title\">{tagHeader}</h1>\n              <div className=\"p-3\">\n                <ul>\n                  {edges.map(({ node }) => {\n                    const {fields, frontmatter } = node\n                    const {slug} = fields\n                    const {title} = frontmatter\n                    return (\n                      <li className=\"tags-innerContent-item\" key={slug}>\n                        <Link className=\"tags-innerContent-item-link\" to={slug}>{title}</Link>\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div>\n                <Link to=\"/tags\">\n                  <button className=\"primaryButton\" href=\"\">\n                    Go back to all tags\n                  </button></Link>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </div>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","title","className","map","node","fields","frontmatter","slug","key","Link","to","href"],"sourceRoot":""}