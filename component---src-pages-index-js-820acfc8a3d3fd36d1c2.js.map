{"version":3,"sources":["webpack:///./src/components/navigation.js","webpack:///./src/pages/index.js"],"names":["NavBtn","label","to","isDisabled","className","prefix","currentPage","totalPages","style","borderRadius","undefined","query","IndexPage","data","pageContext","console","log","title","allMarkdownRemark","edges","map","node","key","id","fields","slug","frontmatter","fontFamily","color","fontSize","date","excerpt","timeToRead","BlogCurrentPage","BlogNumPages"],"mappings":"qMAGMA,G,UAAS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAA0C,IAAnCC,UAAmC,MAA9B,IAA8B,MAAzBC,WACjC,YAD0D,SAOtD,4BAIF,kBAAC,OAAD,CAAMD,GAAIA,EAAIE,UAAU,OACrBH,KAKQ,cAAqD,IAAD,IAAjDI,cAAiD,MAAxC,SAAwC,EAA9BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAChD,OAEE,yBACEH,UAAU,8BACVI,MAAO,CAAEC,aAAc,QAEvB,yBAAKL,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4DACb,kBAAC,EAAD,CACEF,GAAmB,GAAfI,EAAA,IAA4BD,EAA5B,KAAsCC,EAAc,GACxDL,MAAOK,EAAc,EACrBH,WAA2B,GAAfG,GAAmCI,MAAfJ,KAGpC,yBAAKF,UAAU,0DACb,kBAAC,EAAD,CACED,WAAYG,GAAeC,EAC3BL,GAAOG,EAAL,KAAeC,EAAc,GAC/BL,MAAOK,EAAc,SCiBtBK,EAAK,aA4BHC,UA9EG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAGzB,OAFAC,QAAQC,IAAIF,GACZC,QAAQC,IAAIH,GAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKI,MAAM,SAEVJ,EAAKK,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKjB,UAAU,sBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,MAAMkB,IAAKD,EAAKE,IAC7B,kBAAC,OAAD,CACErB,GAAImB,EAAKG,OAAOC,KAChBrB,UAAU,gBAGT,IACD,4BAAKiB,EAAKK,YAAYT,QAExB,0BACET,MAAO,CACLmB,WAAY,wBACZC,MAAO,UACPC,SAAU,SAGXR,EAAKK,YAAYI,MAEpB,2BAAIT,EAAKU,SACT,4CACiBV,EAAKW,WAAY,IACZ,GAAnBX,EAAKW,WAAkB,SAAW,WAErC,yBAAK5B,UAAU,OACb,kBAAC,OAAD,CAAMF,GAAImB,EAAKG,OAAOC,KAAMrB,UAAU,qBAAtC,oBAQV,kBAAC,EAAD,CACEE,YAAaQ,EAAYmB,gBACzB1B,WAAYO,EAAYoB","file":"component---src-pages-index-js-820acfc8a3d3fd36d1c2.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst NavBtn = ({ label, to = \"#\", isDisabled = false }) => {\n  if (isDisabled) {\n    //To change what is returned\n    return (\n      // <button disabled className=\"\">\n      //   {label}\n      // </button>\n      <p></p>\n    )\n  }\n  return (\n    <Link to={to} className=\"p-1\">\n      {label}\n    </Link>\n  )\n}\n\nexport default ({ prefix = \"/page/\", currentPage, totalPages }) => {\n  return (\n    //To change what it looks like\n    <div\n      className=\"row mt-2 post-inner-content\"\n      style={{ borderRadius: \"4px\" }}\n    >\n      <div className=\"col-md-12 navigation-card\">\n        <div className=\"row\">\n          <div className=\"col-6 p-2 d-flex justify-content-start pl-4 hover-bright\">\n            <NavBtn\n              to={currentPage == 2 ? `/` : `${prefix}/${currentPage - 1}`}\n              label={currentPage - 1}\n              isDisabled={currentPage == 1 || currentPage == undefined}\n            />\n          </div>\n          <div className=\"col-6 p-2 d-flex justify-content-end pr-4 hover-bright\">\n            <NavBtn\n              isDisabled={currentPage == totalPages}\n              to={`${prefix}/${currentPage + 1}`}\n              label={currentPage + 1}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Navigation from \"../components/navigation\"\n\nconst IndexPage = ({ data, pageContext }) => {\n  console.log(pageContext)\n  console.log(data)\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <div className=\"post-inner-content\">\n          <div className=\"article-card row\">\n            <div className=\"col\" key={node.id}>\n              <Link\n                to={node.fields.slug}\n                className=\"hover-bright\"\n                // style={{ textDecoration: \"none\" }}\n              >\n                {\" \"}\n                <h1>{node.frontmatter.title}</h1>\n              </Link>\n              <span\n                style={{\n                  fontFamily: \"Open Sans, sans-serif\",\n                  color: \"#8f3774\",\n                  fontSize: \"12px\",\n                }}\n              >\n                {node.frontmatter.date}\n              </span>\n              <p>{node.excerpt}</p>\n              <p>\n                Reading time: {node.timeToRead}{\" \"}\n                {node.timeToRead == 1 ? \"minute\" : \"minutes\"}\n              </p>\n              <div className=\"col\">\n                <Link to={node.fields.slug} className=\"btn-bordo rounded\">\n                  Read More\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n      <Navigation\n        currentPage={pageContext.BlogCurrentPage}\n        totalPages={pageContext.BlogNumPages}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($BlogSkip: Int, $BlogLimit: Int) {\n    allMarkdownRemark(\n      filter: {}\n      sort: { order: DESC, fields: frontmatter___date }\n      skip: $BlogSkip\n      limit: $BlogLimit\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 350)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}