{"version":3,"file":"component---src-templates-blog-list-js-567c03629b560bc38234.js","mappings":"8NAsCA,EAnCmB,SAAC,GAAiC,IAA/BA,EAA8B,EAA9BA,YAEdC,EAAgC,IAAhBD,QAAqCE,IAAhBF,EACrCG,EAAeH,IAH6B,EAAjBI,WAKjC,OACE,uBAAKC,UAAU,4BAA4BC,MAAO,CAAEC,aAAc,QAChE,uBAAKF,UAAU,6BACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,mEACXJ,GACA,gBAAC,EAAAO,KAAD,CACEC,GAAoB,IAAhBT,EAAA,IAA6BU,UAAUV,EAAc,GACzDK,UAAU,wBAFZ,qBAIuBL,EAAc,KAIzC,uBAAKK,UAAU,iEACXF,GACA,gBAAC,EAAAK,KAAD,CACEC,GAAOC,UAAUV,EAAc,GAC/BK,UAAU,wBAFZ,eAIiBL,EAAc,GAJ/B,WCuEd,EAzFkB,SAAC,GAA2B,IAAzBW,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACjBC,EAAkCD,EAAlCC,gBAAiBC,EAAiBF,EAAjBE,aAEzB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,OAAOC,UAAU,KAC5B,sBAAIX,UAAU,oBAAd,uBACCM,EAAKM,kBAAkBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACnC,OACE,uBAAKf,UAAU,oBAAoBgB,IAAKD,EAAKE,IAC3C,uBAAKjB,UAAU,oBACb,uBAAKA,UAAU,OACb,gBAAC,EAAAG,KAAD,CAAMC,GAAIW,EAAKG,OAAOC,MACpB,sBAAInB,UAAU,gCACXe,EAAKK,YAAYV,QAGtB,wBAAMV,UAAU,0BACVe,EAAKK,YAAYC,KADvB,MACiCN,EAAKO,WADtC,iBAC+D,IAC7D,gBAAC,EAAAnB,KAAD,CACEH,UAAU,8BACVI,GAAE,aAAeW,EAAKK,YAAYG,WAAWC,eAF/C,aAIaT,EAAKK,YAAYG,aAGhC,qBAAGvB,UAAU,+BACVe,EAAKK,YAAYK,KAAKX,KAAI,SAAAY,GAAG,OAC5B,gBAAC,EAAAvB,KAAD,CACEC,GAAE,SAAWsB,EAAIF,cAAf,IACFxB,UAAU,mCACVgB,IAAKU,GAEJA,OAIP,yBAAIX,EAAKY,SACT,uBAAK3B,UAAU,OACb,gBAAC,EAAAG,KAAD,CAAMC,GAAIW,EAAKG,OAAOC,MACpB,0BAAQnB,UAAU,qCAAlB,4BAUbQ,GAAmBC,GAClB,gBAAC,EAAD,CAAYd,YAAaa,EAAiBT,WAAYU","sources":["webpack://gatsby-starter-default/./src/components/navigation.js","webpack://gatsby-starter-default/./src/templates/blog-list.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Navigation = ({ currentPage, totalPages }) => {\n  const prefix = \"/page\"\n  const isOnFirstPage = currentPage === 1 || currentPage === undefined\n  const isOnLastPage = currentPage === totalPages\n\n  return (\n    <div className=\"row mt-2 nav-innerContent\" style={{ borderRadius: \"4px\" }}>\n      <div className=\"col-md-12 navigation-card\">\n        <div className=\"row\">\n          <div className=\"col-6 p-2 d-flex align-items-center justify-content-start pl-3\">\n            {!isOnFirstPage && (\n              <Link\n                to={currentPage === 2 ? `/` : `${prefix}/${currentPage - 1}`}\n                className=\"p-1 navigationButton\"\n              >\n                {`← Previous page: ${currentPage - 1}`}\n              </Link>\n            )}\n          </div>\n          <div className=\"col-6 p-2 d-flex align-items-center justify-content-end pr-3\">\n            {!isOnLastPage && (\n              <Link\n                to={`${prefix}/${currentPage + 1}`}\n                className=\"p-1 navigationButton\"\n              >\n                {`Next page: ${currentPage + 1} →`}\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navigation\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link, graphql } from \"gatsby\"\nimport Navigation from \"../components/navigation\"\n\nconst IndexPage = ({ data, pageContext }) => {\n  const { BlogCurrentPage, BlogNumPages } = pageContext\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" canonical=\"\" />\n      <h1 className=\"blogTitle-hidden\">Stefi's Travel Blog</h1>\n      {data.allMarkdownRemark.edges.map(({ node }) => {\n        return (\n          <div className=\"post-innerContent\" key={node.id}>\n            <div className=\"article-card row\">\n              <div className=\"col\">\n                <Link to={node.fields.slug}>\n                  <h2 className=\"post-innerContent-title-main\">\n                    {node.frontmatter.title}\n                  </h2>\n                </Link>\n                <span className=\"post-innerContent-info\">\n                  {`${node.frontmatter.date} • ${node.timeToRead} min read`} •{\" \"}\n                  <Link\n                    className=\"post-innerContent-info-link\"\n                    to={`/category/${node.frontmatter.categories.toLowerCase()}`}\n                  >\n                    category: {node.frontmatter.categories}\n                  </Link>\n                </span>\n                <p className=\"post-innerContent-info-tags\">\n                  {node.frontmatter.tags.map(tag => (\n                    <Link\n                      to={`/tags/${tag.toLowerCase()}/`}\n                      className=\"post-innerContent-info-highlight\"\n                      key={tag}\n                    >\n                      {tag}\n                    </Link>\n                  ))}\n                </p>\n                <p>{node.excerpt}</p>\n                <div className=\"col\">\n                  <Link to={node.fields.slug}>\n                    <button className=\"primaryButton primaryButton-right\">\n                      Continue Reading\n                    </button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n      {BlogCurrentPage && BlogNumPages && (\n        <Navigation currentPage={BlogCurrentPage} totalPages={BlogNumPages} />\n      )}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($BlogSkip: Int, $BlogLimit: Int) {\n    allMarkdownRemark(\n      filter: {}\n      sort: { order: DESC, fields: frontmatter___date }\n      skip: $BlogSkip\n      limit: $BlogLimit\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            categories\n            featuredImage {\n              publicURL\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 350)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["currentPage","isOnFirstPage","undefined","isOnLastPage","totalPages","className","style","borderRadius","Link","to","prefix","data","pageContext","BlogCurrentPage","BlogNumPages","title","canonical","allMarkdownRemark","edges","map","node","key","id","fields","slug","frontmatter","date","timeToRead","categories","toLowerCase","tags","tag","excerpt"],"sourceRoot":""}